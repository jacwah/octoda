This is a reference to the CHIP-8 instruction set. Descriptions are taken from
https://en.wikipedia.org/wiki/CHIP-8#Virtual_machine_description.

code  inst description
--------------------------------------------------------------------------------
0NNN  SYS  Calls RCA 1802 program at address NNN.

00E0  CLS  Clears the screen.

00EE  RET  Returns from a subroutine.

1NNN  JMP  Jumps to address NNN.

2NNN  CALL Calls subroutine at NNN.

3XNN  SE   Skips the next instruction if VX equals NN.

4XNN  SNE  Skips the next instruction if VX doesn't equal NN.

5XY0  SE   Skips the next instruction if VX equals VY.

6XNN  LD   Sets VX to NN.

7XNN  ADD  Adds NN to VX.

8XY0  LD   Sets VX to the value of VY.

8XY1  OR   Sets VX to VX or VY.

8XY2  AND  Sets VX to VX and VY.

8XY3  XOR  Sets VX to VX xor VY.

8XY4  ADD  Adds VY to VX. VF is set to 1 when there's a carry, and to 0 when
           there isn't.

8XY5  SUB  VY is subtracted from VX. VF is set to 0 when there's a borrow, and 1
           when there isn't.

8XY6  SHR  Shifts VX right by one. VF is set to the value of the least
           significant bit of VX before the shift.

8XY7  SUBN Sets VX to VY minus VX. VF is set to 0 when there's a borrow, and 1
           when there isn't.

8XYE  SHL  Shifts VX left by one. VF is set to the value of the most significant
           bit of VX before the shift.

9XY0  SNE  Skips the next instruction if VX doesn't equal VY.

ANNN  LDI  Sets I to the address NNN.

BNNN  JPO  Jumps to the address NNN plus V0.

CXNN  RND  Sets VX to a random number, masked by NN.

DXYN  DRW  Sprites stored in memory at location in index register (I), maximum
           8bits wide. Wraps around the screen. If when drawn, clears a pixel,
           register VF is set to 1 otherwise it is zero. All drawing is XOR
           drawing (i.e. it toggles the screen pixels)

EX9E  SKP  Skips the next instruction if the key stored in VX is pressed.

EXA1  SKNP Skips the next instruction if the key stored in VX isn't pressed.

FX07  LD   Sets VX to the value of the delay timer.

FX0A  LD   A key press is awaited, and then stored in VX.

FX15  LD   Sets the delay timer to VX.

FX18  LD   Sets the sound timer to VX.

FX1E  ADDI Adds VX to I.[3]

FX29  LD   Sets I to the location of the sprite for the character in VX.
           Characters 0-F (in hexadecimal) are represented by a 4x5 font.

FX33  LD   Stores the Binary-coded decimal representation of VX, with the most
           significant of three digits at the address in I, the middle digit at
           I plus 1, and the least significant digit at I plus 2. (In other
           words, take the decimal representation of VX, place the hundreds
           digit in memory at location in I, the tens digit at location I+1, and
           the ones digit at location I+2.)

FX55  SAVE Stores V0 to VX in memory starting at address I.

FX65  REST Fills V0 to VX with values from memory starting at address I.
